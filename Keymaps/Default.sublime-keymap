// This file is generated, do not edit it by hand!
[
  {
    "keys": [
      "*"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "*$0*"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^(?:$|\\s|\\)|]|\\}|\\*|_|`)",
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "(?:^|\\s|\\(|[|]|\\*|_|`)$",
        "match_all": true
      },
      {
        "key": "eol_selector",
        "operator": "not_equal",
        "operand": "string.quoted.single",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "*"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "*${0:$SELECTION}*"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "*"
    ],
    "command": "move",
    "args": {
      "forward": true,
      "by": "characters"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^\\*",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "backspace"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Default/Delete Left Right.sublime-macro"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "\\*$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^\\*",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "_"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "_$0_"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^(?:$|\\s|\\)|]|\\}|\\*|_|`)",
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "(?:^|\\s|\\(|[|]|\\*|_|`)$",
        "match_all": true
      },
      {
        "key": "eol_selector",
        "operator": "not_equal",
        "operand": "string.quoted.single",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "_"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "_${0:$SELECTION}_"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "_"
    ],
    "command": "move",
    "args": {
      "forward": true,
      "by": "characters"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^_",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "backspace"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Default/Delete Left Right.sublime-macro"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "_$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^_",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "`"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "`$0`"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^(?:$|\\s|\\)|]|\\}|\\*|_|`)",
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "(?:^|\\s|\\(|[|]|\\*|_|`)$",
        "match_all": true
      },
      {
        "key": "eol_selector",
        "operator": "not_equal",
        "operand": "string.quoted.single",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "`"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "`${0:$SELECTION}`"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "`"
    ],
    "command": "move",
    "args": {
      "forward": true,
      "by": "characters"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^`",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "backspace"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Default/Delete Left Right.sublime-macro"
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "`$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^`",
        "match_all": true
      },
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      " "
    ],
    "command": "replace_following_character",
    "args": {
      "replacement": " "
    },
    "context": [
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_match",
        "operand": "^\\s*\\*$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_match",
        "operand": "^\\*$",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "tab"
    ],
    "command": "replace_following_character",
    "args": {
      "replacement": "\t"
    },
    "context": [
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_match",
        "operand": "^\\s*\\*$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_match",
        "operand": "^\\*$",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "tab"
    ],
    "command": "asciidoc_indent_list_item",
    "args": {
      "reverse": false
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_match",
        "operand": "^\\s*[*.-]+\\s+$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_match",
        "operand": "^$",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "tab"
    ],
    "command": "asciidoc_indent_list_item",
    "args": {
      "reverse": false
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "text",
        "operator": "regex_contains",
        "operand": "^\\s*[*.-]+\\s+",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "shift+tab"
    ],
    "command": "asciidoc_indent_list_item",
    "args": {
      "reverse": true
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_match",
        "operand": "^\\s*[*.-]+\\s+$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_match",
        "operand": "^$",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "shift+tab"
    ],
    "command": "asciidoc_indent_list_item",
    "args": {
      "reverse": true
    },
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "text",
        "operator": "regex_contains",
        "operand": "^\\s*[*.-]+\\s+",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "enter"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "${TM_CURRENT_LINE/^(\\s*([*.\\-]+)(\\s+)).*/\n$2$3/}"
    },
    "context": [
      {
        "key": "auto_complete_visible",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "^\\s*([*.-]+)\\s+\\S",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "enter"
    ],
    "command": "asciidoc_extend_callouts_list",
    "context": [
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "auto_complete_visible",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "^\\s*<\\d+>\\s+\\S",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "enter"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Asciidoctor/Macros/Purge Line.sublime-macro"
    },
    "context": [
      {
        "key": "auto_complete_visible",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_match",
        "operand": "^\\s*(?:[*.-]+|<\\d+>)\\s+$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_match",
        "operand": "^\\s*$",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "text.asciidoc",
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "not_equal",
        "operand": "markup.raw",
        "match_all": true
      }
    ]
  }
]
